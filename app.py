'''import numpy as np
from flask import Flask, request, jsonify, render_template
import pickle

app = Flask(__name__)
model = pickle.load(open('model.pkl', 'rb'))

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/predict',methods=['POST'])
def predict():
    
    int_features = [int(x) for x in request.form.values()]
    final_features = [np.array(int_features)]
    prediction = model.predict(final_features)

    output = round(prediction[0], 2)

    return render_template('index.html', prediction_text='Employee Salary should be $ {}'.format(output))


if __name__ == "__main__":
    app.run(debug=True, use_reloader=False)'''
    
import numpy as np
from flask import Flask, request, jsonify, render_template
import pickle

app = Flask(__name__)
model = pickle.load(open('model23.pkl', 'rb'))



def predict1(model,listr):
    l=['0205616461',
     '0558925278',
     '0733001998',
     '0737104473',
     '0762451459',
     '1304139212',
     '1304139220',
     '130414089X',
     '130414643X',
     '1304146537',
     '130414674X',
     '1304168522',
     '1304174778',
     '1304174867',
     '1304174905',
     '1304196046',
     '1304196062',
     '1304196070',
     '1304196135',
     '1304351475',
     '1304482596',
     '1304482634',
     '1304482685',
     '1304488608',
     '1304495396',
     '1304511073',
     '1304511081',
     '1304511111',
     '130451112X',
     '1304511138',
     '1304511146',
     '1304511154',
     '1304622193',
     '1304622223',
     '1304622428',
     '1304622452',
     '1304622460',
     '1304622622',
     '1304622657',
     '1304622665',
     '1304624498',
     '1304624544',
     '1304651029',
     '1304651088',
     '130465110X',
     '1304651118',
     '1304651347',
     '1304665704',
     '1304665720',
     '130466578X',
     '1403790965',
     '1412759676',
     '1451646526',
     '1457982633',
     '1572671203',
     '1879187396',
     '1906987238',
     '1929099886',
     '1987958179',
     '3222000565',
     '322700075X',
     '3227001055',
     '3227001381',
     '3292000971',
     '3423470476',
     '360211600X',
     '4057362797',
     '4057362843',
     '4057362886',
     '4057362894',
     '4057362967',
     '4057363823',
     '4057368825',
     '4057553908',
     '5297000963',
     '5357954771',
     '535795531X',
     '535795545X',
     '5357955743',
     '5357955751',
     '5357955786',
     '5357955832',
     '5357955867',
     '5357955905',
     '5357955948',
     '5357955972',
     '5357956014',
     '5357956111',
     '5357956227',
     '6022600685',
     '602260074X',
     '6022600790',
     '6022600804',
     '6022600812',
     '6040652705',
     '6041134473',
     '604113449X',
     '6041134511',
     '6053640972',
     '6117036094',
     '6117043058',
     '6152000416',
     '6162071103',
     '6162751473',
     '6165151329',
     '6165290582',
     '6167061580',
     '6169040335',
     '6175005570',
     '6175005589',
     '711901871X',
     '7535842801',
     '753865058X',
     '7539914718',
     '7800558258',
     '7806397051',
     '7842953384',
     '7883527428',
     '7883633309',
     '788522323X',
     '7885223639',
     '7899120217',
     '7899123011',
     '8072222120',
     '8096398741',
     '8096398768',
     '8096399322',
     '8279995404',
     '8329000710',
     '832900094X',
     '8329001008',
     '8430539387',
     '8805002860',
     '8901110814',
     '8901134322',
     '8934903716',
     '897677244X',
     '8982641262',
     '8997092219',
     '9029300388',
     '9502737628',
     '9509369934',
     '9510213861',
     '9511181564',
     '9511181572',
     '951311290X',
     '9571044822',
     '9573086514',
     '9573215926',
     '9575295714',
     '957696718X',
     '9601403787',
     '9601403825',
     '9601420347',
     '9602344954',
     '9602617918',
     '9605406446',
     '9623541902',
     '9628982370',
     '9740200133',
     '9742126046',
     '9742189889',
     '9742496811',
     '974383785X',
     '9744287233',
     '9744434139',
     '9745340936',
     '9745343412',
     '974619187X',
     '9746427962',
     '9747842297',
     '9748668525',
     '9748776093',
     '974935706X',
     '9749377397',
     '9749513444',
     '9756518006',
     '9756518081',
     '9758086243',
     '9759091062',
     '9788071074',
     '9788071139',
     '9788071163',
     '9788071171',
     '978807118X',
     '9788071198',
     '978807121X',
     '9788071260',
     '9788071465',
     '9788071511',
     '9788071538',
     '9788071554',
     '9788071570',
     '9788071597',
     '9788071813',
     '9788071848',
     '9788071856',
     '9788072097',
     '9788072100',
     '9788072119',
     '9788072208',
     '9788072216',
     '9788072283',
     '9788072305',
     '9788072348',
     '9788072372',
     '9788072453',
     '978807247X',
     '9788072488',
     '978807250X',
     '9788072569',
     '978807278X',
     '9788072828',
     '9788072895',
     '9788072976',
     '9788072992',
     '978807314X',
     '9788073239',
     '9788073247',
     '9788073263',
     '978807328X',
     '9788073328',
     '9788073409',
     '9788073417',
     '9788073476',
     '9788073484',
     '9788073492',
     '9788073514',
     '9788073565',
     '9788073840',
     '9788073859',
     '9788073883',
     '9788074049',
     '9788074286',
     '9788074359',
     '9788074367',
     '9788074405',
     '9788074421',
     '9788074553',
     '9788074995',
     '9788075363',
     '9788075509',
     '9788075584',
     '9788075622',
     '9788075630',
     '9788075649',
     '9788075681',
     '978807572X',
     '9788076025',
     '9788076203',
     '9788077021',
     '9788077315',
     '9788077382',
     '9788077625',
     '9788077927',
     '978807801X',
     '9788078389',
     '9788078885',
     '9788078893',
     '9788078907',
     '978807894X',
     '9788079067',
     '9788079970',
     '9788079989',
     '9788080227',
     '9788080278',
     '978808043X',
     '9788080626',
     '9788080634',
     '9788080669',
     '9788080685',
     '9788080855',
     '9788080901',
     '9788080928',
     '9788081053',
     '9789820615',
     '978982064X',
     '979077012X',
     '9790770138',
     '9790770154',
     '9790770308',
     '9790770391',
     '9790770561',
     '9790770758',
     '9790770790',
     '9790770839',
     '9790770871',
     '9790770898',
     '9790770944',
     '9790770995',
     '9790771002',
     '9790771010',
     '9790771339',
     '9790771347',
     '9790771401',
     '9790771444',
     '9790771479',
     '9790771517',
     '9790771568',
     '9790771584',
     '9790771614',
     '9790771762',
     '9790771916',
     '9790771983',
     '9790772009',
     '9790772238',
     '9790772289',
     '9790772564',
     '9790772645',
     '979077267X',
     '9790773145',
     '9790773161',
     '9790773412',
     '9790773455',
     '9790773463',
     '979077348X',
     '9790773587',
     '9790773609',
     '979077365X',
     '9790773668',
     '9790773676',
     '9790773730',
     '9790773749',
     '9790773870',
     '9790774060',
     '9790774389',
     '9790774397',
     '9790774443',
     '9790774516',
     '979077480X',
     '9790774842',
     '9790774907',
     '9790775024',
     '9790775156',
     '9790775253',
     '9790775261',
     '9790775288',
     '979077530X',
     '9790775571',
     '9790775741',
     '9790775989',
     '9790776098',
     '9790776144',
     '9790776209',
     '9790776241',
     '979077625X',
     '9790776292',
     '9790776349',
     '9790776381',
     '9790776403',
     '9790776489',
     '9790776691',
     '9790776810',
     '9790776942',
     '9790776977',
     '9790777019',
     '9790777272',
     '9790777396',
     '9790777450',
     '9790777884',
     '9790777949',
     '9790777981',
     '9790778236',
     '9790778260',
     '9790778309',
     '9790778554',
     '9790778619',
     '9790778740',
     '9790778872',
     '9790779062',
     '9790779070',
     '9790779097',
     '9790779283',
     '9790779291',
     '9790779399',
     '9790779755',
     '9790779798',
     '9790779925',
     '979077995X',
     '9790779968',
     '9790779976',
     '9790780001',
     '9790780117',
     '9790780400',
     '9790780516',
     '9790780532',
     '9790780567',
     '9790780621',
     '9790780753',
     '9790780788',
     '9790781016',
     '9790781075',
     '9790781105',
     '9790781210',
     '979078127X',
     '9790781369',
     '9790781512',
     '9790781687',
     '9790781849',
     '9790781911',
     '9790781946',
     '9790782047',
     '9790782055',
     '979078208X',
     '9790782152',
     '9790782306',
     '9790782314',
     '9790782365',
     '9790782381',
     '9790782594',
     '9790782667',
     '9790782780',
     '9790782918',
     '9790782942',
     '9790782950',
     '9790782969',
     '9790782977',
     '9790782985',
     '9790783167',
     '9790783388',
     '9790783531',
     '979078354X',
     '9790783647',
     '979078368X',
     '979078371X',
     '9790783728',
     '9790783760',
     '9790783779',
     '9790783809',
     '9790783825',
     '9790784120',
     '9790784414',
     '9790784570',
     '9790784848',
     '9790784856',
     '9790785232',
     '9790785240',
     '9790785356',
     '9790785410',
     '9790785682',
     '9790785755',
     '9790785828',
     '9790786069',
     '9790786077',
     '9790786328',
     '9790786522',
     '9790786557',
     '9790786727',
     '9790786794',
     '9790786875',
     '9790786948',
     '9790786964',
     '9790787006',
     '9790787049',
     '9790787286',
     '9790787294',
     '9790787308',
     '9790787383',
     '9790787510',
     '9790787626',
     '9790787707',
     '9790787839',
     '9790787863',
     '9790787928',
     '9790787936',
     '9790787952',
     '9790788002',
     '9790788185',
     '9790788207',
     '9790788495',
     '9790788584',
     '9790788614',
     '9790788711',
     '9790788770',
     '9790788991',
     '9790789033',
     '9790789157',
     '9790789203',
     '979078922X',
     '9790789270',
     '9790789297',
     '9790789343',
     '9790789351',
     '9790789432',
     '9790789513',
     '979078953X',
     '9790789556',
     '9790789564',
     '9790789688',
     '9790789696',
     '9790789726',
     '9790789831',
     '9790789858',
     '9790789890',
     '9790789939',
     '9790790074',
     '979079021X',
     '9790790341',
     '979079035X',
     '9790790392',
     '979079052X',
     '9790790783',
     '9790790813',
     '9790790880',
     '9790790961',
     '9790790988',
     '9790790996',
     '9790791038',
     '9790791054',
     '9790791100',
     '9790791224',
     '9790791240',
     '9790791402',
     '979079147X',
     '9790791526',
     '979079178X',
     '9790791798',
     '9790791968',
     '9790791984',
     '9790792115',
     '9790792190',
     '9790792204',
     '9790792220',
     '9790792271',
     '9790792476',
     '9790792557',
     '9790792573',
     '9790792646',
     '9790792719',
     '9790792808',
     '9790792824',
     '9790792891',
     '9790793014',
     '9790793030',
     '9790793073',
     '9790793111',
     '9790793227',
     '979079326X',
     '9790793294',
     '9790793626',
     '9790793782',
     '9790793839',
     '9790793871',
     '9790794010',
     '979079410X',
     '9790794207',
     '9790794223',
     '9790794231',
     '9790794258',
     '9790794282',
     '9790794363',
     '9790794495',
     '9790794509',
     '979079455X',
     '9790794614',
     '9790794665',
     '9790794800',
     '9790794827',
     '9790794843',
     '9790794851',
     '9790794991',
     '9790795076',
     '9790795084',
     '9790795114',
     '9790795157',
     '9790795351',
     '9790795416',
     '9790795424',
     '9790795602',
     '9790795661',
     '979079567X',
     '979079570X',
     '9790795823',
     '9790796234',
     '9790796293',
     '979079634X',
     '979079651X',
     '9790796609',
     '9790796684',
     '9790796722',
     '9790796943',
     '9790797079',
     '9790797397',
     '9790797567',
     '9790797710',
     '9790797818',
     '9790797885',
     '9790798075',
     '9790798261',
     '9790798288',
     '979079830X',
     '9790798326',
     '9790798393',
     '9790798512',
     '979079858X',
     '9790798695',
     '9790798873',
     '9790798881',
     '9790798911',
     '9790798954',
     '9790798962',
     '9790799020',
     '9790799055',
     '9790799136',
     '9790799233',
     '9790799349',
     '9790799365',
     '9790799551',
     '9790799659',
     '9790799705',
     '9790799764',
     '9790799780',
     '9790799799',
     '9790799829',
     '9790800126',
     '9790800525',
     '9790800568',
     '9790800851',
     '9790800916',
     '9790801076',
     '9790801084',
     '9790801106',
     '9790801149',
     '9790801211',
     '9790801297',
     '9790801483',
     '9790801491',
     '9790801505',
     '979080153X',
     '9790801556',
     '9790801637',
     '9790801645',
     '9832114276',
     '9839215019',
     '9839215027',
     '9839215051',
     '9866010503',
     '9866379841',
     '9879870743',
     '987987076X',
     '9895514042',
     '9896009651',
     '9944260118',
     '9944260630',
     'B000000VP5',
     'B000000Z3C',
     'B0000014DT',
     'B000001H8T',
     'B000001K4R',
     'B000001SH8',
     'B0000020TR',
     'B00000270K',
     'B00000374R',
     'B000005A4M',
     'B000005G46',
     'B000005J5M',
     'B000005J9Q',
     'B000005L8T',
     'B000005LJT',
     'B000005SIP',
     'B000005Z5L',
     'B0000065GY',
     'B000006A6H',
     'B000006J86',
     'B00000744O',
     'B000007T5X',
     'B000007X34',
     'B000007XHG',
     'B000009LPL',
     'B00000G2HU',
     'B00000IAI4',
     'B00000IR6P',
     'B00000JGVX',
     'B00000JGVY',
     'B00000JK0Q',
     'B00001ZTKL',
     'B00001ZTL0',
     'B000023YFO',
     'B000024BMM',
     'B000024L6H',
     'B000024M5R',
     'B000024Z42',
     'B000025034',
     'B0000254D3',
     'B000025MVI',
     'B000025RRS',
     'B000026BTH',
     'B000026G2H',
     'B000027S8A',
     'B000027U8N',
     'B000027WL0',
     'B0000280M8',
     'B0000281UM',
     'B00002NBTA',
     'B00002R140',
     'B00002Z77V',
     'B000031WBK',
     'B00003Z9V7',
     'B00004S6H9',
     'B00004S7M6',
     'B00004SASL',
     'B00004SV5J',
     'B00004TMFE',
     'B00004TMOK',
     'B00004TUBL',
     'B00004TUBV',
     'B00004TVGG',
     'B00004TVH2',
     'B00004TZYD',
     'B00004U002',
     'B00004U9UY',
     'B00004U9V2',
     'B00004VBMM',
     'B00004VYKH',
     'B00004WFUZ',
     'B00004XRY5',
     'B000050ASF',
     'B000050ASG',
     'B000050B6R',
     'B000050B6U',
     'B000050B6X',
     'B000050B75',
     'B000050B76',
     'B000050FER',
     'B000050FES',
     'B000050FET',
     'B000050FEV',
     'B000050RO8',
     'B000051XYY',
     'B0000523I9',
     'B000052WWR',
     'B000052WY7',
     'B000052WYD',
     'B000052WYL',
     'B000052WYN',
     'B000052WZ7',
     'B000052X9G',
     'B000052XEG',
     'B000052XI0',
     'B000052XIA',
     'B000052XOT',
     'B000052XQK',
     'B000052XR0',
     'B000052XR3',
     'B000052XR5',
     'B000052XV5',
     'B000052XVB',
     'B000052XW5',
     'B000052XYB',
     'B000052XYE',
     'B000052XYH',
     'B000052XYQ',
     'B000052XYZ',
     'B000052XZ0',
     'B000052XZP',
     'B000052XZQ',
     'B000052XZX',
     'B000052Y0B',
     'B000052Y0C',
     'B000052Y0I',
     'B000052Y0S',
     'B000052Y0U',
     'B000052Y0Y',
     'B000052Y1M',
     'B000052Y1Q',
     'B000052Y1R',
     'B000052Y21',
     'B000052Y23',
     'B000052Y25',
     'B000052Y28',
     'B000052Y2A',
     'B000052Y2F',
     'B000052Y2G',
     'B000052Y2H',
     'B000052Y2K',
     'B000052Y2W',
     'B000052Y2X',
     'B000052Y31',
     'B000052Y33',
     'B000052Y3V',
     'B000052Y43',
     'B000052Y5F',
     'B000052Y68',
     'B000052Y6H',
     'B000052Y6I',
     'B000052Y6K',
     'B000052Y6L',
     'B000052Y6M',
     'B000052Y6R',
     'B000052Y6V',
     'B000052Y6Z',
     'B000052YDH',
     'B000052YE1',
     'B000052YFY',
     'B000052YGB',
     'B000052YGS',
     'B000052YH3',
     'B000052YI1',
     'B000052YIE',
     'B000052YJA',
     'B000052YJB',
     'B000052YJC',
     'B000052YJD',
     'B000052YJE',
     'B000052YJF',
     'B000052YJG',
     'B000052YJH',
     'B000052YJK',
     'B000052YJM',
     'B000052YJN',
     'B000052YJS',
     'B000052YJU',
     'B000052YJX',
     'B000052YJY',
     'B000052YK2',
     'B000052YKG',
     'B000052YKI',
     'B000052YKM',
     'B000052YKS',
     'B000052YKT',
     'B000052YKU',
     'B000052YKY',
     'B000052YL0',
     'B000052YL1',
     'B000052YLE',
     'B000052YLF',
     'B000052YLL',
     'B000052YLS',
     'B000052YLU',
     'B000052YLW',
     'B000052YLX',
     'B000052YM0',
     'B000052YM3',
     'B000052YM4',
     'B000052YM7',
     'B000052YM8',
     'B000052YME',
     'B000052YMF',
     'B000052YMG',
     'B000052YMH',
     'B000052YMM',
     'B000052YMO',
     'B000052YMQ',
     'B000052YMR',
     'B000052YMS',
     'B000052YMT',
     'B000052YMU',
     'B000052YMV',
     'B000052YMX',
     'B000052YN5',
     'B000052YN6',
     'B000052YN7',
     'B000052YN9',
     'B000052YNA',
     'B000052YNB',
     'B000052YNE',
     'B000052YOC',
     'B000052YOG',
     'B000052YOL',
     'B000052YOM',
     'B000052YOQ',
     'B000052YOR',
     'B000052YOS',
     'B000052YOT',
     'B000052YOU',
     'B000052YOV',
     'B000052YOX',
     'B000052YOY',
     'B000052YOZ',
     'B000052YP0',
     'B000052YP1',
     'B000052YP3',
     'B000052YP4',
     'B000052YP6',
     'B000052YP9',
     'B000052YPC',
     'B000052YPE',
     'B000052YPF',
     'B000052YPG',
     'B000052YPH',
     'B000052YPM',
     'B000052YPU',
     'B000052YPV',
     'B000052YPY',
     'B000052YQ0',
     'B000052YQ2']
    correlation_matrix = np.corrcoef(model)

    #i = "6117036094"
    i=listr
    product_names = list(l)
    product_ID = product_names.index(i)


    correlation_product_ID = correlation_matrix[product_ID]
    Recommend=[]
    
    for k in range(len(l)):
        if(correlation_product_ID[k] > 0.90):
            Recommend.append(l[k])


    Recommend.remove(i) 

    return Recommend

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/predict',methods=['POST'])
def predict():
    '''
    For rendering results on HTML GUI
    '''
    int_features = [str(x) for x in request.form.values()]
    #final_features = [np.array(int_features)]
    prediction = predict1(model,int_features[0])

    
    return render_template('index.html', prediction_text='Different Product Id for the users will be {}'.format(prediction))

if __name__ == "__main__":
    app.run(debug=True,use_reloader=False)    